<script type="text/javascript">
 const addBlock = (elem, maxId, prototypeName) => {
   const regExp = new RegExp(prototypeName, 'g');
   let prototype = $(elem)
     .data('prototype')
     .replace(regExp, maxId)
   ;

   $(elem)
     .append(
       $('<div />', {
         class: 'element-container'
       }).append(
         $('<div />', {
           class: 'row'
         }).append(
           $('<div />', {
             class: 'col-md-12'
           }).append(
             $('<div />', {
               class: 'row'
             }).append(prototype)
           )
         )
       )
     )
   ;
 }

 const addChildButtons = (data, withLink) => {
   $(`div[${data}]`)
     .each((i, e) => {
       if ($(e).find('[data-child-btn]').length === 0) {
         $(e).append(
           $('<div />', {
             class: 'element-container',
           }).append(
             $('<div />', {
               class: 'row',
               attr: {
                 'data-child-btn': true,
               }
             })
           )
         )
       }

       if (withLink === true) {
         addLinkButton(e, data);
       }

       addDeleteButton(e, data);
     });
 }

 const addLinkButton = (e, data) => {
   const buttonIsAdded = $(e).find('[data-link-btn]').length;
   if (buttonIsAdded !== 0) {
     return; // e.g. continue
   }

   $(e)
     .find('[data-child-btn]')
     .append(
       $('<div />', {
         class: 'col-md-1',
         attr: {
           'data-link-btn': true
         }
       }).append(
         $('<a />', {
           class: 'btn btn-info'
         }).append(
           $('<i />', {
             class: 'fa fa-link'
           })
         ).on('click', (x) => {
           const value = $(e)
             .find('select[data-link] option:selected')
             .val();

           const id = JSON.parse(atob(value)).id;
           const type = JSON.parse(atob(value)).type;

           const url = $(e)
             .find('[data-link]')
             .attr('data-link')
             .replace(/__type__/, type)
             .replace(/__id__/, id)
           ;

           window.open(url, '_blank');
         })
       )
     )
 }

 const addDeleteButton = (e, data) => {
   const buttonIsAdded = $(e).find('[data-delete]').length;
   if (buttonIsAdded !== 0) {
     return; // e.g. continue
   }

   $(e)
     .find('[data-child-btn]')
     .append(
       $('<div />', {
         class: 'col-md-1',
         attr: {
           'data-delete': true
         }
       }).append(
         $('<a />', {
           class: 'btn btn-danger'
         }).append(
           $('<i />', {
             class: 'fa fa-minus-circle'
           })
         ).on('click', () => {
           removePrefix($(e).closest('.element-container'));
         })
       )
     );
 }


 const removePrefix = (elem) => {
   elem.remove();
 }

 const process = (dataName, blockName, prototypeName, withLink) => {
   addChildButtons(dataName, withLink);

   $('div[data-child]')
     .each((i, e) => {
       const buttonExists = $(e)
         .find(`#${$(e).attr('id')}_${blockName}`)
         .closest('div.form-group')
         .find('.tne-add')
         .length
       ;

       if (buttonExists !== 0) {
         return;
       }

       const parentId = $(e)
         .attr('id')
         .replace(/.*_(\d+)/, "$1")
       ;

       let maxId = 0;

       const str = `^${$(e).attr('id')}_${blockName}_(\\d+)$`;
       const regExp = new RegExp(str);

       $(e)
         .find(`div[${dataName}]`)
         .each((j, x) => {
           const id = $(x)
             .attr('id')
             .replace(regExp, "$1")
           ;

           maxId = maxId < id ? id : maxId;
         });

       $(e)
         .find(`#${$(e).attr('id')}_${blockName}`)
         .closest('.form-group')
         .find('label.control-label')
         .eq(0)
         .parent()
         .append(
           $('<div />', {
             class: 'row',
           }).append($('<div />', {
             class: 'col-md-10',
           }).append(
             $('<a />', {
               class: 'btn btn-success tne-add tne-add-hint',
             }).append(
               $('<i />', {
                 class: 'fa fa-plus'
               })
             ).on('click', () => {
               maxId++
               addBlock(`#time_condition_timeConditionBlocks_${parentId}_${blockName}`, maxId, prototypeName);
               addChildButtons(dataName, withLink);
             })
           )
           )
         )
     });
 }
</script>
